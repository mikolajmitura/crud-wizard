error.url.not.found=The endpoint for the URL could not be found: {0}
found.more.than.one.result=More than one record found. Expected zero or one.
mapper.converter.not.found.between.metamodels=Could not find a converter from: {0} to: {1} for path '{2}'{3}
mapper.found.to.many.mappings.for.simple.type=More than one mapping strategy found for simple type
mapper.found.to.many.methods=Matching methods found: {0}, expected one
mapper.not.found.assign.strategy=No mapping strategy found for field {0} in type: {1} for path '{2}'{3}
mapper.not.found.assign.for.method=in method: {0}
mapper.mapping.problem.reason=reason: {0}
mapper.mapping.collection.element.problem=NCan't find a way to map from: {0} to: {1}
cannot.find.write.property.strategy=Could not find set value strategy for class: {0}, no builder method, no public default constructor or multi-argument constructor.
cannot.find.builder.method.in.class=Could not find builder method with empty argument list in class: {0}
cannot.find.field.resolver.strategy=Could not find a way to write field values for class: {0}
cannot.get.field.from.simple.field=Could not find field named: {0}, simple type: {1} in path: '{2}'
MapperGenerationException.message=An error occurred while generating classes for mapper: {0}
MapperContextEntryError.entry=entry
MapperContextEntryError.column=column
MappersModelsCache.not.found.mapper=Could not find mapper named {0}
expected.beanName.or.mapperName=expected bean name with method or mapper name
expected.any.of.chars=expected one of the characters: {0}
cannot.find.bean.name=Could not find spring bean named: {0}
cannot.find.method.with.arguments=Could not find method named: {methodName} with arguments: {classesTypes} in class: {givenClass}
expected.mapper.argument=Expected one argument for mapper named: {0}
expected.mapper.type.argument=Expected argument type: {0}, and {1} is given for mapper named: {2}
expected.variable.name.not.empty=The variable name should not be empty.
invalid.other.variable.name=invalid variable name: {0}, valid variable names: headers, pathVariables, requestParams, mappingContext, rootSourceObject
cannot.find.field.name=Field name '{0}' not found in type: {1}
mapper.parser.class.not.found=Could not find class '{0}'
mapper.parser.meta.model.not.found=Could not find meta model with name: '{0}'
current.mapper.name=for the current parsed mapper
mappingContext.required.cast=A cast is required to retrieve a field value from the $mappingContext variable
mapper.parser.expected.expression.for.field.extractor=before '.' an expression or variable name is expected
mapper.parser.expected.any.char=The existence of a mark under this position was expected
mapper.cannot.map.enum.value=Could not find a mapping from enum: {1}.{0} to enum type: {2}, in path: '{3}'
mapping.invalid.enum.value=Invalid enum value: {0} in path {1}, available values: {2} for enum meta model: {3}{4}
pl.jalokim.crudwizard.genericapp.metamodel.classmodel.validation.ExistFullDefinitionInTempContextByName.message=Full definition for metamodel by name in temporary context not found
pl.jalokim.crudwizard.genericapp.metamodel.classmodel.validation.ExistFullDefinitionInTempContextByClassName.message=Full definition for metamodel by class name in temporary context not found
UniqueMapperNamesValidator.root.names.should.be.the.same=The value should match the field {0}
UniqueMapperNamesValidator.not.unique.method.name=The method name should be unique within the mapper
BeansAndMethodsExistsValidator.bean.not.exist=Can't find a bean with that name.
BeansAndMethodsExistsValidator.bean.not.the.same.class=The bean under the given name is of type: {0}, but should be subtype: {1}
BeansAndMethodsExistsValidator.method.not.found=No method with this name found in class: {0}
BeansAndMethodsExistsValidator.invalid.method.argument=The parameter under the index: {0} in the method does not comply with the call specification for: {1} (TODO documentation reference)
BeansAndMethodsExistsValidator.service.type=services
BeansAndMethodsExistsValidator.mapper.type=mappers
BeansAndMethodsExistsValidator.method.return.type.invalid=method returns class: {0}, cannot be assigned to type {1}
ClassMetaModel.id.field.not.found=For class metamodel: {0} no id field could be found (one of the fields must be marked "is_id_field")
MapperGenerateConfigurationMapper.create.config.problem=Unable to build configuration for mapping, check logs.
RawJavaCodeSourceExpressionParser.invalid.expression=The expression is invalid, empty, or the number of parentheses does not match
ClassMetaModel.invalid.field.override=Incorrect overwriting of the field {0}, type: {1} in the model: {2}, the overwritten field has the type: {3}, from the model: {4}
ForRealClassFieldsCanBeMerged.invalid.field.name=There is no field with that name in the given class
ForRealClassFieldsCanBeMerged.invalid.field.type=Currently this field has a different type: {0}
ForRealClassFieldsCanBeMerged.expected.enum.translations=Should not be null when real class is enum type
ForRealClassFieldsCanBeMerged.lack.enum.translation=Not given translation for enum: {0}
ForRealClassFieldsCanBeMerged.unknown.enum=Unknown enum entry
ProvidedAllLanguages.cannot.find.translation.for.lang=No translation found for language {0}
ProvidedAllLanguages.language.not.supported=language {0} is not supported
OnlyExpectedFieldsForRealClass.expected.field.not.found=There should be a field named: {0}
OnlyExpectedFieldsForRealClass.duplication.found=field named: {0} is occurring more than once
pl.jalokim.crudwizard.genericapp.metamodel.classmodel.validation.NotContainsWhiteSpaces.message=Cannot contain whitespace
ProvidedAllLanguages.cannot.enable.lang=Cannot enable language due to not provided translations: {0}
