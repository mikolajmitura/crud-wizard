package pl.jalokim.crudwizard.generated.mapper;

import java.util.Optional;
import java.util.Map;
import pl.jalokim.crudwizard.genericapp.mapper.GenericMapperArgument;
import pl.jalokim.crudwizard.genericapp.mapper.generete.GeneratedMapper;
import pl.jalokim.crudwizard.genericapp.mapper.generete.GeneratedMethod;


class MclassHasSamplePersonModelToCClassHasSamplePersonDtoMapper1 implements GeneratedMapper {
		private final org.springframework.core.convert.ConversionService conversionService;
		private final pl.jalokim.crudwizard.genericapp.mapper.conversion.GenericObjectsConversionService genericObjectsConversionService;
    MclassHasSamplePersonModelToCClassHasSamplePersonDtoMapper1(org.springframework.core.convert.ConversionService conversionService,
pl.jalokim.crudwizard.genericapp.mapper.conversion.GenericObjectsConversionService genericObjectsConversionService) {
		this.conversionService = conversionService;
		this.genericObjectsConversionService = genericObjectsConversionService;
    }

    @Override
    public pl.jalokim.crudwizard.core.sample.ClassHasSamplePersonDto mainMap(GenericMapperArgument genericMapperArgument) {
        Object rootSourceObject = genericMapperArgument.getSourceObject();
        Object sourceObject = genericMapperArgument.getSourceObject();
        Map<String, String> headers = genericMapperArgument.getHeaders();
        Map<String, Object> pathVariables = genericMapperArgument.getPathVariables();
        Map<String, Object> requestParams = genericMapperArgument.getRequestParams();
        Map<String, Object> mappingContext = genericMapperArgument.getMappingContext();

        if (sourceObject == null) {
            return null;
        }

		return new pl.jalokim.crudwizard.core.sample.ClassHasSamplePersonDto(

		((pl.jalokim.crudwizard.core.sample.SamplePersonDto) genericObjectsConversionService.convert("metaModelPersonToSamplePersonDto", ((java.util.Map<java.lang.String, java.lang.Object>) Optional.ofNullable(sourceObject)
			.map(genericMap -> ((java.util.Map<java.lang.String, java.lang.Object>) genericMap).get("samplePersonDto"))
			.orElse(null)))),

		((pl.jalokim.crudwizard.core.sample.SamplePersonDto) genericObjectsConversionService.convert("metaModelPersonToSamplePersonDto", ((java.util.Map<java.lang.String, java.lang.Object>) Optional.ofNullable(sourceObject)
			.map(genericMap -> ((java.util.Map<java.lang.String, java.lang.Object>) genericMap).get("otherPersonDto"))
			.orElse(null)))),

		((pl.jalokim.crudwizard.core.sample.SomeObjectWithFewObjects) null),

		conversionService.convert(((java.lang.String) Optional.ofNullable(sourceObject)
			.map(genericMap -> ((java.util.Map<java.lang.String, java.lang.Object>) genericMap).get("someId"))
			.orElse(null)), java.lang.Long.class)
        );
    }

}
